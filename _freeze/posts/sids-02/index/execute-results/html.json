{
  "hash": "63aab13ce833a81b856ca32189b3749c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"SIDS Ch 2 - Data Viz\"\nauthor: \"Colin Madland\"\ndate: \"2025-05-16\"\ncategories: [tidyverse, R]\nimage: \"sails.jpg\"\nfreeze: auto\n---\n\n\n\n\n::: {.callout}\n\nIsmay, C., Kim, A. Y., & Valdivia, A. (2025). [Statistical Inference via Data Science: A ModernDive into R and the Tidyverse (2nd ed.)](https://moderndive.com/v2/). Chapman and Hall/CRC. \n:::\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(nycflights23)\nlibrary(ggplot2)\nlibrary(moderndive)\nlibrary(tibble)\nlibrary(viridis)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: viridisLite\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'dplyr'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n\n\n:::\n:::\n\n\n\n\n## 3 components of the Grammar or Graphiics\n\n- `data`: the dataset containing the variables of interest.\n- `geom`: the geometric object in question. This refers to the type of object we can observe in a plot. For example: points, lines, and bars.\n- `aes`: aesthetic attributes of the geometric object. For example, x/y position, color, shape, and size. Aesthetic attributes are mapped to variables in the dataset.\n\n### Other components\n\n- `facet`  to break up a plot into several plots split by the values of another variable (Section 2.6)\n- position adjustments for barplots (Section 2.8)\n\n### Five Named graphs - 5NG\n\n1. Scatterplots\n2. line graphs\n3. bar graphs\n4. histograms\n5. boxplots\n\n\n#### Scatterplots\n\nUsed to see the relationship between two numerical variables.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(envoy_flights)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = envoy_flights, mapping = aes(x = dep_delay, y = arr_delay)) + \n  geom_point()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n- there is a problem of the points overlapping\n  - change transparency with `alpha` argument\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = envoy_flights, mapping = aes(x = dep_delay, y = arr_delay)) + \n  geom_point(alpha = 0.2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n\n- add jitter\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = envoy_flights, mapping = aes(x = dep_delay, y = arr_delay)) + \n  geom_jitter(width = 30, height = 30)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Linegraphs\n\nShow the relationship between two variables when the x-axis (explanatory variable) is sequential.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(weather)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(weather)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 26,207\nColumns: 15\n$ origin     <chr> \"JFK\", \"JFK\", \"JFK\", \"JFK\", \"JFK\", \"JFK\", \"JFK\", \"JFK\", \"JF…\n$ year       <int> 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023, 2023,…\n$ month      <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ day        <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ hour       <int> 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1…\n$ temp       <dbl> 48.0, 48.2, 49.0, 49.0, 49.0, 48.0, 46.4, 46.0, 48.0, 47.0,…\n$ dewp       <dbl> 48.0, 48.2, 49.0, 49.0, 49.0, 48.0, 46.4, 46.0, 48.0, 47.0,…\n$ humid      <dbl> 100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100.00, 100…\n$ wind_dir   <dbl> 0, 190, 190, 250, 170, 0, 250, 230, 260, 250, 240, 260, 260…\n$ wind_speed <dbl> 0.00000, 4.60312, 5.75390, 5.75390, 8.05546, 0.00000, 9.206…\n$ wind_gust  <dbl> 0.000000, 5.297178, 6.621473, 6.621473, 9.270062, 0.000000,…\n$ precip     <dbl> 1e-02, 1e-02, 1e-04, 2e-02, 1e-04, 1e-04, 0e+00, 0e+00, 0e+…\n$ pressure   <dbl> 1010.2, 1009.2, 1009.0, 1008.0, 1007.8, 1007.6, 1007.3, 100…\n$ visib      <dbl> 0.25, 2.50, 0.25, 4.00, 0.75, 0.75, 0.24, 0.50, 8.00, 5.00,…\n$ time_hour  <dttm> 2023-01-01 00:00:00, 2023-01-01 01:00:00, 2023-01-01 02:00…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = early_january_2023_weather, \n       mapping = aes(x = time_hour, y = wind_speed)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Histograms\n\nShows the distribution of a variable.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = weather, mapping = aes(x = wind_speed)) +\n  geom_histogram()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1041 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = weather, mapping = aes(x = wind_speed)) +\n  geom_histogram(color = \"white\", fill = \"steelblue\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1041 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n\n##### adjusting bins\n\n- number of bins\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = weather, mapping = aes(x = wind_speed)) +\n  geom_histogram(bins = 20, color = \"white\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1041 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\n- binwidth\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = weather, mapping = aes(x = wind_speed)) +\n  geom_histogram(binwidth = 5, color = \"white\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1041 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Facets\n\nDividing plots by subcategories in the data.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = weather, mapping = aes(x = wind_speed)) +\n  geom_histogram(binwidth = 5, color = \"white\") +\n  facet_wrap(~ month)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1041 rows containing non-finite outside the scale range\n(`stat_bin()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Boxplots\n\nDisplay the distribution of data and include five numbers to summarize the data:\n\n- minimum\n- first quartile (25th percentile)\n- median (2nd quartile, 50th percentile)\n- third quartile (75th percentile)\n- maximum\n- also shows the IQR (middle 50%)\n  - whiskers extend no more than 1.5 IQR units beyond 25th and 75 percentile.\n  - points beyond 1.5 IQR units may be considered outliers.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = weather, mapping = aes(x = month, y = wind_speed)) +\n  geom_boxplot()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Continuous x aesthetic\nℹ did you forget `aes(group = ...)`?\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1041 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n\n::: {.callout-note}\nReturns an invalid plot and a warning.\n:::\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = weather, mapping = aes(x = month, y = wind_speed, group = month)) +\n  geom_boxplot() \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1041 rows containing non-finite outside the scale range\n(`stat_boxplot()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\nOR\n\n- represent months as factors and use `geom(violin)` for a more detailed plot.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = weather, mapping = aes(x = factor(month), y = wind_speed)) +\n  geom_violin()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 1041 rows containing non-finite outside the scale range\n(`stat_ydensity()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n\n#### Barplots\n\nSimpler representation of the distribution known as `frequencxies`\n- depends on whether the items are counted or not.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfruits <- tibble(fruit = c(\"apple\", \"apple\", \"orange\", \"apple\", \"orange\"))\nfruits_counted <- tibble(\n  fruit = c(\"apple\", \"orange\"),\n  number = c(3, 2))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = fruits, mapping = aes(x = fruit)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = fruits_counted, mapping = aes(x = fruit)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = fruits_counted, mapping = aes(x = fruit, y = number)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n\n- when items are not counted, use `geom_bar()` with `fruit` mapped to the x `aes`\n- when items are counted, we add `number` to the y `aes` and use `geom_col()`\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(flights,  aes(x = carrier)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-21-1.png){width=672}\n:::\n:::\n\n\n\n\n- `geom_histogram()` has bars that touch, but `geom_bar()` has bars with white space between\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(airlines)\n```\n:::\n\n\n\n\n::: {.callout-important}\n[The best pie-chart is a bar-chart.](https://moderndive.com/v2/viz.html#must-avoid-pie-charts)\n:::\n\n##### Stacked Barplot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = flights, mapping = aes(x = carrier, fill = origin)) +\n  geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n\n\n##### Dodged Barplot\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = flights, mapping = aes(x = carrier, fill = origin)) +\n  geom_bar(position = \"dodge\") +\n  scale_fill_viridis_d(option = \"plasma\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-24-1.png){width=672}\n:::\n:::\n\n\n\n\n## Summary\n\n|Named graph\t|Shows\t|Geometric object\t|Notes|\n| :---: | :---: | --- | --- | \n|1|\tScatterplot |\tRelationship between 2 numerical variables\tgeom_point()\t|   |\n|2\t|Linegraph|\tRelationship between 2 numerical variables\tgeom_line() |\tUsed when there is a sequential order to x-variable, e.g., time|\n|3\t|Histogram\t|Distribution of 1 numerical variable\tgeom_histogram()\t|Facetted histograms show the distribution of 1 numerical variable split by the values of another variable|\n|4\t|Boxplot\t|Distribution of 1 numerical variable split by the values of another variable\tgeom_boxplot()\t|   |\n|5|\tBarplot|\tDistribution of 1 categorical variable\tgeom_bar() when counts are not pre-counted, geom_col() when counts are pre-counted\t| Stacked, side-by-side, and faceted barplots show the joint distribution of 2 categorical variables|\n<!-- ```{r viz-summary-table, echo=FALSE, message=FALSE, purl=FALSE}\n# The following Google Doc is published to CSV and loaded using read_csv():\n# https://docs.google.com/spreadsheets/d/1vzqlFiT6qm5wzy_L_0nL7EWAd6jiUZmLSCFhDhztDSg/edit#gid=0\n\nif (!file.exists(\"rds/summary_table_ch2-v2.rds\")) {\n  summary_table_ch3 <-\n    \"https://docs.google.com/spreadsheets/d/e/2PACX-1vRGaUW6EMIGPhg2V7CahoSdVi_JCcESFRYV5tov6bjcwOcn7DZDzfpZgrvjfFG6PV57gcJYIrwl_Q2c/pub?gid=0&single=true&output=csv\" |>\n    read_csv(na = \"\")\n  summary_table_ch3$Notes[2] <- \"Used when there is a sequential order to x-variable, e.g., time\"\n  write_rds(summary_table_ch3, \"rds/summary_table_ch2-v2.rds\")\n} else {\n  summary_table_ch2 <- read_rds(\"rds/summary_table_ch2-v2.rds\") |>\n    rename(` ` = `...1`)\n}\n\nif (is_latex_output()) {\n  summary_table_ch2 |>\n    # Weird tick marks show up in PDF:\n    mutate(`Geometric object` = str_replace_all(`Geometric object`, \"`\", \"\")) |>\n    kbl(\n      caption = \"Summary of Five Named Graphs\",\n      booktabs = TRUE,\n      format = \"latex\",\n      linesep = \"\"\n    ) |>\n    kable_styling(font_size = 10) |>\n    column_spec(3, width = \"1.1in\") |>\n    column_spec(4, width = \"1.2in\") |>\n    column_spec(5, width = \"1.6in\")\n} else {\n  summary_table_ch2 |>\n    kable(\n      caption = \"Summary of Five Named Graphs\",\n      booktabs = TRUE,\n      format = \"html\"\n    )\n}\n``` -->",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}