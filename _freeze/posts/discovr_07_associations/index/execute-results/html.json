{
  "hash": "71bd1340ea7d6cbee128efcd48e38bc8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"discovr_07 - Associations\"\nauthor: \"Colin Madland\"\ndate: \"2024-03-10\"\ncategories: [correlation, R, discovr]\neditor: visual\nimage: \"image.jpg\"\nfreeze: auto\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse, ggplot2)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nliar_tib <- here::here(\"data/biggest_liar.csv\") |> readr::read_csv()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 68 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): id, novice\ndbl (2): creativity, position\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nexam_tib <- here::here(\"data/exam_anxiety.csv\") |> readr::read_csv()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 103 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): sex\ndbl (4): id, revise, exam_grade, anxiety\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nliar_tib <- liar_tib |> \n  dplyr::mutate(\n    novice = forcats::as_factor(novice)\n  )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_tib <- exam_tib |>\n  dplyr::mutate(\n    id = forcats::as_factor(id),\n    sex = forcats::as_factor(sex)\n  )\n```\n:::\n\n\n\n-   psychologist uses a questionnaire to assess state anxiety related to exams (EAQ)\n-   scale produced a measure of anxiety scored out of 100\n-   anxiety was measured before the exam, and the percentage grade on the exam was recorded\n-   also measured the number of hours spent revising Data are in\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_tib\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 103 × 5\n   id    revise exam_grade anxiety sex   \n   <fct>  <dbl>      <dbl>   <dbl> <fct> \n 1 1          4         40    86.3 Male  \n 2 2         11         65    88.7 Female\n 3 3         27         80    70.2 Male  \n 4 4         53         80    61.3 Male  \n 5 5          4         40    89.5 Male  \n 6 6         22         70    60.5 Female\n 7 7         16         20    81.5 Female\n 8 8         21         55    75.8 Female\n 9 9         25         50    69.4 Female\n10 10        18         40    82.3 Female\n# ℹ 93 more rows\n```\n\n\n:::\n:::\n\n\n\n-   visualise with `GGally`\n-   plot continuous variables, the `ggscatmat()` function produces a matrix of scatterplots (below the diagonal), distributions (along the diagonal) and the correlation coefficient (above the diagonal)\n-   general form of `ggscatmat()`\n    -   `GGally::ggscatmat(my_tibble, columns = c(\"variable 1\", \" variable 2\", \" variable 3\" …))`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGGally::ggscatmat(exam_tib, columns = c(\"exam_grade\", \"revise\", \"anxiety\")) +\ntheme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'GGally':\n  method from   \n  +.gg   ggplot2\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n-   resulting plots are all skewed\n-   could be a problem if we want significance tests or confidence intervals\n-   sample contains 103 obs\n    -   could be large enough for central limit theorem to relieve us of concerns about normality\n    -   consider doing a robust method to compute correlation coefficient\n\n## Pearson's correlation using `R`\n\n-   `correlation` package -\\> workhorse function called `correlation()`\n\n```         \ncorrelation::correlation(tibble,\n                         method = \"pearson\",\n                         p_adjust = \"holm\",\n                         ci = 0.95\n                         )\n```\n\n`tibble`\n\n:   should be replaced with the name of tibble containing any variables to correlate\n\n`method`\n\n:   method of correlation coefficient, default is `pearson`, but can also accept `spearman, kendall, biserial, polychoric, tetrachoric, and percentage`\n\n`p_adjust`\n\n:   corrects the $p$-value for the number of tests you have performed using the Holm-Bonferroni method\n\n:   applies the Bonferroni criterion in a slightly less strict way that controls the type I error, but with less risk of a type II error\n\n:   can change to `none` (bad idea), `bonferroni` (to apply the standard Bonferroni method) or several other methods.\n\n`ci`\n\n:   set the confidence interval width; default is 0.95 for general use\n\nTo use the function, - pipe tibble into the `select()` function from `dplyr` to select variables to correlate, then pipe that into the correlation function - use the same syntax whether you want to correlate two variables or produce all correlations between pairs of multiple variables\\]\n\nTo calculate Pearson correlation btwn variables `exam_grade` and `revise` in `exam_tib`...\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_tib |> \n  dplyr::select(exam_grade, revise) |> \n  correlation::correlation() |> \n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|Parameter1 |Parameter2 |     r|   CI| CI_low| CI_high|     t| df_error|  p|Method              | n_Obs|\n|:----------|:----------|-----:|----:|------:|-------:|-----:|--------:|--:|:-------------------|-----:|\n|exam_grade |revise     | 0.397| 0.95|   0.22|   0.548| 4.343|      101|  0|Pearson correlation |   103|\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_tib |> \n  dplyr::select(exam_grade, anxiety) |> \n  correlation::correlation() |> \n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|Parameter1 |Parameter2 |      r|   CI| CI_low| CI_high|      t| df_error|  p|Method              | n_Obs|\n|:----------|:----------|------:|----:|------:|-------:|------:|--------:|--:|:-------------------|-----:|\n|exam_grade |anxiety    | -0.441| 0.95| -0.585|  -0.271| -4.938|      101|  0|Pearson correlation |   103|\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_tib |> \n  dplyr::select(exam_grade, revise, anxiety) |> \n  correlation::correlation() |> \n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|Parameter1 |Parameter2 |      r|   CI| CI_low| CI_high|       t| df_error|  p|Method              | n_Obs|\n|:----------|:----------|------:|----:|------:|-------:|-------:|--------:|--:|:-------------------|-----:|\n|exam_grade |revise     |  0.397| 0.95|  0.220|   0.548|   4.343|      101|  0|Pearson correlation |   103|\n|exam_grade |anxiety    | -0.441| 0.95| -0.585|  -0.271|  -4.938|      101|  0|Pearson correlation |   103|\n|revise     |anxiety    | -0.709| 0.95| -0.794|  -0.598| -10.111|      101|  0|Pearson correlation |   103|\n\n\n:::\n:::\n\n\n\n::: {.callout-important collapse=\"true\"}\n## The confidence interval for the association between exam grade and revision is 0.22 to 0.55. What does this tell us?\n\nIf this confidence interval is one of the 95% that contains the population value then the population value of r lies between 0.22 and 0.55.\n:::\n\n::: {.callout-important collapse=\"true\"}\n## The p-value for the association between exam grade and revision is \\< 0.001, what does this value mean?\n\nThe probability of getting a value of t at least as big as the value we have observed, if the value of r were, in fact, zero is less than 0.001. I’m going to assume, therefore, that the association between exam grade and revision is not zero.\n:::\n\n-   exam grade correlates with revision - $r$=0.4\n-   exam grade had a similar strength relationship with exam anxiety $r$=-0.44 but in the opposite direction\n-   revision had a strong negative relationship with anxiety - $r$=-0.709\n-   the more you revise, the better your performance\n-   the more anxiety you have, the worse your performance\n-   the mopre you revise, the less anxiety you have\n-   all $p$-values are less than 0.001 and would be interpreted as the correlation coefficients being significantly different from zero\n-   significance values tell us that the probability of getting correlation coefficients at least as big as this in a sample of 103 people if the null were true (that there was no relationship between the variables) is very low\n-   if we assume the sample is one of the 95% of samples that will produce a confidence interval containing the population value, then the confidence intervals tell us about the uncertainty around $r$.\n\n::: callout-tip\n## Rounding\n\nWe can control the number of decimal places using `knitr::kable(digits = 3)`\n\nWe can also specify different columns to contain different rounding using `knitr::kable(digits = c(2, 2, 2, 2, 2, 2, 2, 2, 8))` (column 9 to 8 decimal places) or `knitr::kable(digits = c(rep(2, 8), 8))`\n:::\n\n## Robust correlation coefficients\n\nGiven the skew in the variables, we should use a robust correlation coefficient, like the `percentage bend correlation coefficient` by setting `method = \"percentage\"` within `correlation()`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexam_tib |> \n  dplyr::select(exam_grade, revise, anxiety) |> \n  correlation::correlation(\n   method = \"percentage\"\n   ) |> \n  knitr::kable(digits = c(rep(2, 8), 8))\n```\n\n::: {.cell-output-display}\n\n\n|Parameter1 |Parameter2 |     r|   CI| CI_low| CI_high|     t| df_error|          p|Method                      | n_Obs|\n|:----------|:----------|-----:|----:|------:|-------:|-----:|--------:|----------:|:---------------------------|-----:|\n|exam_grade |revise     |  0.34| 0.95|   0.15|    0.50|  3.60|      101| 0.00049502|Percentage Bend correlation |   103|\n|exam_grade |anxiety    | -0.40| 0.95|  -0.55|   -0.23| -4.41|      101| 0.00005235|Percentage Bend correlation |   103|\n|revise     |anxiety    | -0.61| 0.95|  -0.72|   -0.47| -7.66|      101| 0.00000000|Percentage Bend correlation |   103|\n\n\n:::\n:::\n\n\n\n| Par1       | Par2    | Percentage Bend $r$ | raw Pearson $r$ |\n|------------|---------|---------------------|-----------------|\n| exam_grade | revise  | 0.34                | 0.397           |\n| exam_grade | anxiety | -0.40               | -0.441          |\n| revise     | anxiety | -0.61               | -0.709          |\n\nAll robust correlations (percentage bend) are less than raw, though all are significant at $p<0.001$\n\n## Spearman's correlation coefficient\n\n-   data from World's Best Liar competition\n-   want to know if creativity impacts lying ability\n-   position data (1st, 2nd, etc) is ordinal, so Spearman's correlation coefficient should be used\n-   Data are in\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nliar_tib\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 68 × 4\n   id    creativity position novice          \n   <chr>      <dbl>    <dbl> <fct>           \n 1 lnwe          53        1 First time      \n 2 vxob          36        3 Previous entrant\n 3 qpli          31        4 First time      \n 4 pwsq          43        2 First time      \n 5 xafq          30        4 Previous entrant\n 6 njra          41        1 First time      \n 7 lxty          32        4 First time      \n 8 dxcw          54        1 Previous entrant\n 9 uxgp          47        2 Previous entrant\n10 dvew          50        2 First time      \n# ℹ 58 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\nGGally::ggscatmat(liar_tib, columns = c(\"creativity\", \"position\")) +\ntheme_minimal()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\nTo get Spearman correlation, we use `correlation()` the same way as we did with `Pearson`, except we add `method = \"spearman\"` to the function\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nliar_tib |>\n  dplyr::select(creativity, position) |> \n  correlation::correlation(method = \"spearman\") |> \n    knitr::kable(digits = c(rep(2, 7), 8))\n```\n\n::: {.cell-output-display}\n\n\n|Parameter1 |Parameter2 |   rho|   CI| CI_low| CI_high|       S|          p|Method               | n_Obs|\n|:----------|:----------|-----:|----:|------:|-------:|-------:|----------:|:--------------------|-----:|\n|creativity |position   | -0.37| 0.95|  -0.57|   -0.14| 71948.4| 0.00172042|Spearman correlation |    68|\n\n\n:::\n:::\n\n\n\n-   Spearman correlation between the two is $r_s=-0.37$ with an associated $p$-value of 0.002 and a sample size of 68\n-   as creativity increased, position decreased\n    -   this might seem contrary to the hypothesis, but a position of `4` is a lower position than `1`\n\n## Kendall's tau ($\\tau$)\n\n-   another non-parametric correlation\n-   used instead of Spearman's correlation when data set is small with a large number of tied ranks\n-   `correlation()` function will calculate Kendall's $\\tau$ by including `method = \"kendall\"`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nliar_tib |>\n  dplyr::select(creativity, position) |> \n  correlation::correlation(method = \"kendall\") |> \n    knitr::kable(digits = c(rep(4, 7), 8))\n```\n\n::: {.cell-output-display}\n\n\n|Parameter1 |Parameter2 |     tau|   CI|  CI_low| CI_high|       z|         p|Method              | n_Obs|\n|:----------|:----------|-------:|----:|-------:|-------:|-------:|---------:|:-------------------|-----:|\n|creativity |position   | -0.3002| 0.95| -0.4396| -0.1468| -3.2252| 0.0012588|Kendall correlation |    68|\n\n\n:::\n:::\n\n\n\n-   output shows $\\tau=-0.3$ -\\> closer to 0 than Spearman (-.38) therefore Kendall's value is likely a more accurate guage of what the correlation in the population would be\n\n::: callout\nCover Photo by <a href=\"https://unsplash.com/@heebase?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Zhuojun Yu</a> on <a href=\"https://unsplash.com/photos/a-sandy-beach-covered-in-snow-at-sunset-RsBkqnfmgjA?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash\">Unsplash</a>\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}