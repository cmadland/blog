---
title: "Multiplot Layouts Using Facets"
author: "Colin Madland"
date: "2025-01-18"
categories: [ggplot2, tidyverse, statsglobe, R, facets]
image: "kigali-family.jpg"
freeze: false
---

[Data Visualization in R Using ggplot2 - Module 5](https://statisticsglobe.com/online-course-data-visualization-ggplot2-r)

- Load ggplot2 and set a random seed  


```{r}
library(ggplot2)
library(tidyverse)
set.seed(91755)                                           # Seed for reproducibility
```

- Generate synthetic dataset

```{r}
x <-- c(rnorm(100, mean = 0.5, sd = 2),                    # Create synthetic data
       rnorm(100, mean = - 3, sd = 4),
       rnorm(100, mean = 2, sd = 0.5))
y <-- c(rnorm(200, mean = 1, sd = 3),
       rnorm(100, mean = - 1, sd = 0.7)) +
  0.7 * x
```

:::{.callout}
Create dataframe called `my_data` and create 3 groups and 4 subgroups
:::


```{r}
my_data <- data.frame(x = x,
                      y = y,
                      group = rep(LETTERS[1:3], each = 100),
                      subgroup = sample(letters[1:4], size = 300, replace = TRUE))
view(my_data)
```

::: {.callout}
Create scatterplot with each group a different colour
:::

```{r}
ggplot(data = my_data,                                    # Scatterplot without facets
       aes(x = x,
           y = y,
           color = group)) +
  geom_point()
```

::: {.callout}
Create multiplot with each group as a facet and displayed in a different subplot,
:::

```{r}
ggplot(data = my_data,                                    # Multiplot using facet_wrap
       aes(x = x,
           y = y)) +
  geom_point() +
  facet_wrap(~ group)
```

::: {.callout}
Create multiplot with groups and subgroups as facets.
:::

```{r}
ggplot(data = my_data,                                    # Two grouping variables
       aes(x = x,
           y = y)) +
  geom_point() +
  facet_wrap(group ~ subgroup)
```

::: {.callout}
Create multiplot using the `facet_grid` function
:::

```{r}
ggplot(data = my_data,                                    # Using facet_grid
       aes(x = x,
           y = y)) +
  geom_point() +
  facet_grid(group ~ subgroup)
```

::: {.callout}
Same, but switch `group` and `subgroup` in the function.
:::

```{r}
ggplot(data = my_data,                                    # Using facet_grid
       aes(x = x,
           y = y)) +
  geom_point() +
  facet_grid(subgroup ~ group)
```

::: {.callout}
Add colour
:::

```{r}
ggplot(data = my_data,                                    # Mapping colors
       aes(x = x,
           y = y,
           col = group)) +
  geom_point() +
  facet_grid(subgroup ~ group)
```

::: {.callout}
Add regression lines
:::

```{r}
ggplot(data = my_data,                                    # Add layers to facets
       aes(x = x,
           y = y,
           col = group)) +
  geom_point() +
  facet_grid(subgroup ~ group) +
  geom_smooth(method = "lm")
```

## Exercises

In this module, we will continue working with the airquality data set and introduce a new variable for grouping days into specific ranges. To prepare, we will install and load the `dplyr` and `ggplot2` packages, convert the `Month` column to a `factor` class, and create a new factor variable `DayRange` that categorizes the `Day` column into ranges: <=10, 11-20, and >20.


 
```{r}
data(airquality)   # Load example data
```
                                         
 
```{r}
airquality$Month <- as.factor(airquality$Month)           # Convert Month to factor
```

 
```{r}
airquality <- airquality %>%                              # Create Day ranges
  mutate(DayRange = factor(case_when(Day <= 10 ~ "<=10",
                                     Day >= 11 & Day <= 20 ~ "11-20",
                                     Day > 20 ~ ">20")))
```

Letâ€™s now proceed with the exercises for this module:

- Create a scatter plot mapping Wind to the x-axis and Temp to the y-axis. Use facet_wrap() to create separate panels for each Month.

```{r}
ggplot(data = airquality,
   aes(x = Wind,
    y = Temp)) +
    geom_point() +
    facet_wrap(~ Month)
```

- Extend the scatter plot by using facet_grid() to create a grid of plots with DayRange on the rows and Month on the columns.

```{r}
ggplot(data = airquality,
   aes(x = Wind,
    y = Temp)) +
    geom_point() +
    facet_grid(DayRange ~ Month)
```

- Add the col aesthetic to map Month to colors in the scatter plot, while maintaining the grid layout with facet_grid().

```{r}
ggplot(data = airquality,
   aes(x = Wind,
    y = Temp,
    col = Month)) +
    geom_point() +
    facet_grid(DayRange ~ Month)
```