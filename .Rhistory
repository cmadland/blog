library(UsingR)
install.packages("UsingR")
wts
library(UsingR)
wts
head(wts)
head(rivers)
if(!require(remotes)){
install.packages('remotes')
}
remotes::install_github("profandyfield/discovr")
library(discovr)
library(learnr)
library(discovr)
install.packages(c("admisc", "BH", "bookdown", "boot", "brew", "bslib", "callr", "checkmate", "cluster", "coda", "commonmark", "cowplot", "cpp11", "curl", "data.table", "DBI", "dbplyr", "deldir", "DiagrammeR", "digest", "dplyr", "e1071", "expm", "foreign", "gert", "ggplot2", "ggrepel", "glue", "GPArotation", "gtools", "haven", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "interp", "jqr", "knitr", "later", "lattice", "learnr", "lintr", "lisrelToR", "lubridate", "lwgeom", "maps", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "msm", "mvtnorm", "nlme", "OpenMx", "openssl", "papaja", "pkgload", "prettymapr", "progress", "ps", "psych", "qgraph", "R.oo", "R.utils", "ragg", "Rcpp", "RcppArmadillo", "readr", "renv", "reprex", "rlang", "rnaturalearth", "rnaturalearthdata", "roxygen2", "rpart", "RUnit", "rvest", "s2", "sass", "scales", "sf", "shiny", "sp", "StanHeaders", "survival", "systemfonts", "terra", "textshaping", "tidyr", "timechange", "tinytex", "units", "usethis", "uuid", "V8", "viridis", "vroom", "webp", "withr", "wk", "xfun", "XML", "xml2", "yaml", "zip"))
library(discovr)
library(discovr)
learnr::run_tutorial("discovr_08", package = "discovr")
install.packages("BayesFactor")
learnr::run_tutorial("discovr_08", package = "discovr")
install.packages("BayesFactor")
learnr::run_tutorial("discovr_08", package = "discovr")
install.packages(c("BayesFactor", "boot", "expm", "igraph", "interp", "lwgeom", "Matrix", "RcppArmadillo", "robust", "robustbase", "rrcov", "terra"))
learnr::run_tutorial("discovr_08", package = "discovr")
library(BayesFactor)
install.packages("Matrix")
learnr::run_tutorial("discovr_08", package = "discovr")
learnr::run_tutorial("discovr_08", package = "discovr")
library(discovr)
learnr::run_tutorial("discovr_08", package = "discovr")
learnr::run_tutorial("discovr_0", package = "discovr")
learnr::run_tutorial("discovr_08", package = "discovr")
remove.packages("BayesFactor")
install.packages("BayesFactor")
learnr::run_tutorial("discovr_08", package = "discovr")
remove.packages("BayesFactor")
remove.packages("Matrix")
install.packages("Matrix")
install.packages("BayesFactor")
learnr::run_tutorial("discovr_02", package = "discovr")
learnr::run_tutorial("discovr_08", package = "discovr")
num_respondents <- 200
num_respondents <- 200
# Set the number of respondents and questions
num_respondents <- 200
num_questions <- 75
respondent_ids <- 1:num_respondents
responses <- matrix(sample(c(0, 1), num_respondents * num_questions, replace = TRUE), nrow = num_respondents)
data <- data.frame(Respondent = respondent_ids, responses)
write.csv(data, "responses_dataset.csv", row.names = FALSE)
data
summary(data)
GGally::ggscatmat(data, columns = c(X1:X75))  +
theme_minimal()
GGally::ggscatmat(data, columns = c("X1":"X75"))  +
theme_minimal()
GGally::ggscatmat(data, columns = c(1:75))  +
theme_minimal()
