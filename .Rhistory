library(UsingR)
install.packages("UsingR")
wts
library(UsingR)
wts
head(wts)
head(rivers)
if(!require(remotes)){
install.packages('remotes')
}
remotes::install_github("profandyfield/discovr")
library(discovr)
library(learnr)
library(discovr)
install.packages(c("admisc", "BH", "bookdown", "boot", "brew", "bslib", "callr", "checkmate", "cluster", "coda", "commonmark", "cowplot", "cpp11", "curl", "data.table", "DBI", "dbplyr", "deldir", "DiagrammeR", "digest", "dplyr", "e1071", "expm", "foreign", "gert", "ggplot2", "ggrepel", "glue", "GPArotation", "gtools", "haven", "htmlTable", "htmltools", "htmlwidgets", "httpuv", "httr2", "igraph", "interp", "jqr", "knitr", "later", "lattice", "learnr", "lintr", "lisrelToR", "lubridate", "lwgeom", "maps", "markdown", "MASS", "Matrix", "MatrixModels", "mgcv", "msm", "mvtnorm", "nlme", "OpenMx", "openssl", "papaja", "pkgload", "prettymapr", "progress", "ps", "psych", "qgraph", "R.oo", "R.utils", "ragg", "Rcpp", "RcppArmadillo", "readr", "renv", "reprex", "rlang", "rnaturalearth", "rnaturalearthdata", "roxygen2", "rpart", "RUnit", "rvest", "s2", "sass", "scales", "sf", "shiny", "sp", "StanHeaders", "survival", "systemfonts", "terra", "textshaping", "tidyr", "timechange", "tinytex", "units", "usethis", "uuid", "V8", "viridis", "vroom", "webp", "withr", "wk", "xfun", "XML", "xml2", "yaml", "zip"))
library(discovr)
library(discovr)
learnr::run_tutorial("discovr_08", package = "discovr")
install.packages("BayesFactor")
learnr::run_tutorial("discovr_08", package = "discovr")
install.packages("BayesFactor")
learnr::run_tutorial("discovr_08", package = "discovr")
install.packages(c("BayesFactor", "boot", "expm", "igraph", "interp", "lwgeom", "Matrix", "RcppArmadillo", "robust", "robustbase", "rrcov", "terra"))
learnr::run_tutorial("discovr_08", package = "discovr")
library(BayesFactor)
install.packages("Matrix")
learnr::run_tutorial("discovr_08", package = "discovr")
learnr::run_tutorial("discovr_08", package = "discovr")
library(discovr)
learnr::run_tutorial("discovr_08", package = "discovr")
learnr::run_tutorial("discovr_0", package = "discovr")
learnr::run_tutorial("discovr_08", package = "discovr")
remove.packages("BayesFactor")
install.packages("BayesFactor")
learnr::run_tutorial("discovr_08", package = "discovr")
remove.packages("BayesFactor")
remove.packages("Matrix")
install.packages("Matrix")
install.packages("BayesFactor")
learnr::run_tutorial("discovr_02", package = "discovr")
learnr::run_tutorial("discovr_08", package = "discovr")
num_respondents <- 200
num_respondents <- 200
# Set the number of respondents and questions
num_respondents <- 200
num_questions <- 75
respondent_ids <- 1:num_respondents
responses <- matrix(sample(c(0, 1), num_respondents * num_questions, replace = TRUE), nrow = num_respondents)
data <- data.frame(Respondent = respondent_ids, responses)
write.csv(data, "responses_dataset.csv", row.names = FALSE)
data
summary(data)
GGally::ggscatmat(data, columns = c(X1:X75))  +
theme_minimal()
GGally::ggscatmat(data, columns = c("X1":"X75"))  +
theme_minimal()
GGally::ggscatmat(data, columns = c(1:75))  +
theme_minimal()
GGally::ggscatmat(data, columns = c(1:75))  +
theme_minimal()
GGally::ggscatmat(data, columns = c(1:75))
GGally::ggscatmat(data, columns = c(1:75))
write.csv(data, "responses_dataset.csv", row.names = FALSE)
responses
data$total <- rowSums(data[, -1])
data$total
range(data$total)
mean(data$total)
afl <- c(2, 6, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76)
afl$total <- rowSums(afl)
afl$total <- rowSums(afl[1:16])
afl$total <- rowSums(afl[1, 16])
afl$total <- rowSums(afl[1, 15])
afl$total <- rowSums(afl[1:16])
row_sums <- rowSums(afl)
?rowSums
afl$total <- rowSums(afl[1, 16])
afl
selected_columns <- c(2, 6, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76)
afl <- c(2, 6, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76)
afl <- as_tibble(data[, afl])
afl <- as.data.frame(data[, afl])
afl$total <- rowSums(afl[1, 16])
afl$total <- rowSums(afl)
afl
View(afl)
aol <- c(3, 7, 12, 17, 22, 27, 32, 37, 42, 47, 52, 57, 62, 67, 72, 76)
aol$total <- rowSums(aol[1, 16])
aol <- as.data.frame(data[, aol])
aol$total <- rowSums(aol)
aol
afl <- c(2, 6, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71)
afl <- as.data.frame(data[, afl])
aol$total <- rowSums(aol)
afl
afl <- c(2, 7, 12, 17, 22, 27, 32, 37, 42, 47, 52, 57, 62, 67, 72)
afl <- as.data.frame(data[, afl])
afl$total <- rowSums(afl)
afl
aol <- c(3, 8, 13, 18, 23, 28, 33, 38, 43, 48, 53, 58, 63, 68, 73)
aol <- as.data.frame(data[, aol])
aol$total <- rowSums(aol)
aal <- seq(4, ncol(data), by=5)
aal <- as.data.frame(data[, aal])
aal$total <- rowSums(aal)
bias <- seq(5, ncol(data), by=5)
bias <- as.data.frame(data[, bias])
bias$total <- rowSums(bias)
equ <- seq(6, ncol(data), by=5)
equ <- as.data.frame(data[, equ])
equ$total <- rowSums(equ)
incl <- equ
incl
afl <- seq(2, ncol(data), by=15)
afl <- as.data.frame(data[, afl])
afl$total <- rowSums(afl)
afl
afl <- seq(2, ncol(data), by=15)
afl
afl <- as.data.frame(data[, afl])
afl
data
afl <- seq(2, ncol(75), by=15)
afl <- seq(2, ncol(data), by=15)
data <- data_frame[, !(names(data_frame) == "total")]
data <- data[, !(names(data) == "total")]
afl <- seq(2, ncol(data), by=15)
afl <- as.data.frame(data[, afl])
afl$total <- rowSums(afl)
afl
aol <- seq(3, ncol(data), by=15)
aol <- as.data.frame(data[, aol])
aol$total <- rowSums(aol)
aal <- seq(4, ncol(data), by=15)
aal <- as.data.frame(data[, aal])
aal$total <- rowSums(aal)
bias <- seq(5, ncol(data), by=15)
bias <- as.data.frame(data[, bias])
bias$total <- rowSums(bias)
incl <- seq(6, ncol(data), by=15)
incl <- as.data.frame(data[, incl])
incl$total <- rowSums(incl)
relat <- seq(7, ncol(data), by=15)
relat <- as.data.frame(data[, relat])
relat$total <- rowSums(relat)
relat
eth <- seq(8, ncol(data), by=15)
eth <- as.data.frame(data[, eth])
eth$total <- rowSums(eth)
pex <- seq(9, ncol(data), by=15)
pex <- as.data.frame(data[, pex])
pex$total <- rowSums(pex)
eex <- seq(10, ncol(data), by=15)
eex <- as.data.frame(data[, eex])
eex$total <- rowSums(eex)
soci <- seq(10, ncol(data), by=15)
soci <- as.data.frame(data[, soci])
soci$total <- rowSums(soci)
soci <- seq(11, ncol(data), by=15)
soci <- as.data.frame(data[, soci])
soci$total <- rowSums(soci)
faci <- seq(12, ncol(data), by=15)
faci <- as.data.frame(data[, faci])
faci$total <- rowSums(faci)
meas <- seq(13, ncol(data), by=15)
meas <- as.data.frame(data[, meas])
meas$total <- rowSums(meas)
aint <- seq(14, ncol(data), by=15)
aint <- as.data.frame(data[, aint])
aint$total <- rowSums(aint)
relv <- seq(15, ncol(data), by=15)
relv <- as.data.frame(data[, relv])
relv <- as.data.frame(data[, relv])
relv$total <- rowSums(relv)
relv
reci <- seq(16, ncol(data), by=15)
reci <- as.data.frame(data[, reci])
reci$total <- rowSums(reci)
aol_column_sums <- colSums(aol, na.rm = TRUE)
aol_column_sums <- as.data.frame(data[, aol_column_sums])
aol_column_sums <- as.data.frame(data[2:6, aol_column_sums])
aol_column_sums <- as.data.frame(data[2, 6, aol_column_sums])
aol_column_sums
aol_column_sums <- colSums(aol, na.rm = TRUE)
aol_column_sums
aol$total <- colSums(aol)
aol
head(aol)
tail(aol)
aol_column_sums <- as.data.frame(data[, aol_column_sums])
aol_column_sums <- as.data.frame(data[, aol_column_sums])
?as.data.frame
aol_column_sums <- as.data.frame(aol_column_sums[, aol_column_sums])
column_sums <- colSums(aol, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
colnames(sum_row) <- colnames(aol)
aol <- rbind(aol, sum_row)
tail(aol)
column_sums <- colSums(afl, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
afl <- rbind(afl, sum_row)
column_sums <- colSums(aal, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
aal <- rbind(aal, sum_row)
column_sums <- colSums(aint, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
aint <- rbind(aint, sum_row)
column_sums <- colSums(bias, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
bias <- rbind(bias, sum_row)
column_sums <- colSums(eex, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
eex <- rbind(eex, sum_row)
column_sums <- colSums(eth, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
eth <- rbind(eth, sum_row)
column_sums <- colSums(faci, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
faci <- rbind(faci, sum_row)
column_sums <- colSums(incl, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
incl <- rbind(incl, sum_row)
column_sums <- colSums(meas, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
meas <- rbind(meas, sum_row)
column_sums <- colSums(pex, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
pex <- rbind(pex, sum_row)
column_sums <- colSums(reci, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
reci <- rbind(reci, sum_row)
column_sums <- colSums(relat, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
relat <- rbind(relat, sum_row)
column_sums <- colSums(relv, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
relv <- rbind(relv, sum_row)
column_sums <- colSums(soci, na.rm = TRUE)
sum_row <- as.data.frame(t(column_sums))
soci <- rbind(soci, sum_row)
GGally::ggscatmat(aol, columns = c(X2:X6))  +
theme_minimal()
GGally::ggscatmat(aol, columns = c(2:6))  +
theme_minimal()
GGally::ggscatmat(aol, columns = c(2:6))
GGally::ggscatmat(aol, columns = c(1:5))
GGally::ggscatmat(aol, columns = c(1:6))
GGally::ggscatmat(afl, columns = c(1:6))
aol
GGally::ggscatmat(data = , columns = c(1:6))
GGally::ggscatmat(data, columns = c(1:6))
GGally::ggscatmat(data, columns = c(2:6))
GGally::ggscatmat(data, columns = c(2:16))
GGally::ggscatmat(data, columns = c(2:75))
learnr::run_tutorial("discovr_08", package = "discovr")
?across
soc_anx_tib |>
dplyr::summarise(
across(.fns = list(valid = ~sum(!is.na(.x)), missing = ~sum(is.na(.x))), .names = "{.col}_{.fn}")
)
dplyr::summarise(
across(.cols("spai", "iii", "obq", "tosca") .fns = list(valid = ~sum(!is.na(.x)), missing = ~sum(is.na(.x))), .names = "{.col}_{.fn}")
?dplyr
library(dplyr)
detach("package:dplyr", unload = TRUE)
library(discovr)
learnr::run_tutorial("discovr_07", package = "discovr")
learnr::run_tutorial("discovr_07", package = "discovr")
library(GGally)
install.packages("installr")
library(installr)
updateR()
library(discovr)
learnr::run_tutorial("discovr_06", package = "discovr")
learnr::run_tutorial("discovr_02", package = "discovr")
